% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/umf_solve_nl.R
\name{umf_solve_nl}
\alias{umf_solve_nl}
\title{Solves a system of non-linear equations \eqn{F(x) = 0} using UMFPACK}
\usage{
umf_solve_nl(start, fn, jac, ..., control = list(), global = c("no",
  "cline"), scaling = c("no", "col"))
}
\arguments{
\item{start}{initial guess of the solution \eqn{x}}

\item{fn}{the function \eqn{F}}

\item{jac}{a function returning the Jacobian of the function
as a \code{dgCMatrix} object}

\item{...}{arguments passed to \code{fn} and \code{jac}}

\item{control}{a list with control parameters. See Details.}

\item{global}{The global strategy. Possible values are \code{"no"}
(no global strategy, the default) and \code{"cline"} (cubic line search)
(cubic line search)}

\item{scaling}{The scaling method. The default is no scaling. See Details.}
}
\value{
a list with the following components:
\item{\code{solved}}{A logical equal to \code{TRUE} if convergence
of the function values has been achieved.}
\item{\code{iter}}{the number of iterations}
\item{\code{x}}{the final values of \eqn{x}}
\item{\code{fval}}{the function value }
\item{\code{message}}{A string equal to \code{"ok"} if a solution
has been found. Otherwise it describes the reason why the iteration
was stopped without success}
}
\description{
Solves a system of non-linear equations \eqn{F(x) = 0} using UMFPACK
}
\details{
\subsection{Control options}{
Argument \code{control} is a named list containing one or more of
the following components:
\describe{
\item{\code{ftol}}{The function value tolerance. Convergence is reached
if the largest function value is smaller than \code{ftol}. The default
value is \code{1e-8}.}
\item{\code{xtol}}{The relative step size tolerance. When the relative
step size is smaller than \code{xtol}, then the iteration is stopped.
The default value is \code{1e-8}.}
\item{\code{maxiter}}{The maximum number of iterations. The default is 20.}
\item{\code{trace}}{A logical. If \code{TRUE}  then the progress of the
iteraton is printed. The default is \code{FALSE}.}
\item{\code{silent}}{A logical. If \code{TRUE}  then all output is suppressed.
The default is \code{FALSE}.}
 \item{\code{allow_singular}}{A logical value (default \code{FALSE})
 indicating if a small correction to the Jacobian is applied when it is
 singular or too ill-conditioned.
 The method used is similar to a Levenberg-Marquardt correction
 and is explained in Dennis and Schnabel (1996) on page 151.
}
}}
\subsection{Scaling}{
TODO:  DESCRIBE SCALING METHOD (col)
}
}
\examples{
library(umfpackr)

dslnex <- function(x, c) {
   y <- numeric(2)
   y[1] <- x[1]^2 + x[2]^2 - c
   y[2] <- exp(x[1]-1) + x[2]^3 - c
   y
}

jacdsln <- function(x, c) {
   n <- length(x)
   Df <- matrix(numeric(n*n),n,n)
   Df[1,1] <- 2*x[1]
   Df[1,2] <- 2*x[2]
   Df[2,1] <- exp(x[1]-1)
   Df[2,2] <- 3*x[2]^2

   return(as(Df, "dgCMatrix"))
}


xstart <- c(2,3)
print(umf_solve_nl(xstart, dslnex, jacdsln, c = 2,
                  control = list(trace = TRUE)))
}
