% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/umf_solve_nl.R
\name{umf_solve_nl}
\alias{umf_solve_nl}
\title{Solves a system of non-linear equations \eqn{F(x) = 0} using UMFPACK}
\usage{
umf_solve_nl(start, fn, jac, ..., control = list(), global = c("no",
  "cline"))
}
\arguments{
\item{start}{initial guess of the solution \eqn{x}}

\item{fn}{the function \eqn{F}}

\item{jac}{a function returning the Jacobian of the function
as a \code{dgCMatrix} object}

\item{...}{arguments passed to \code{fn} and \code{jac}}

\item{control}{a list with control parameters}

\item{global}{The global strategy.}
}
\value{
a list with information about the solution
}
\description{
Solves a system of non-linear equations \eqn{F(x) = 0} using UMFPACK
}
\examples{
library(umfpackr)

dslnex <- function(x, c) {
   y <- numeric(2)
   y[1] <- x[1]^2 + x[2]^2 - c
   y[2] <- exp(x[1]-1) + x[2]^3 - c
   y
}

jacdsln <- function(x, c) {
   n <- length(x)
   Df <- matrix(numeric(n*n),n,n)
   Df[1,1] <- 2*x[1]
   Df[1,2] <- 2*x[2]
   Df[2,1] <- exp(x[1]-1)
   Df[2,2] <- 3*x[2]^2

   return(as(Df, "dgCMatrix"))
}


xstart <- c(2,3)
print(umf_solve_nl(xstart, dslnex, jacdsln, c = 2,
                  control = list(trace = TRUE)))
}
